name: Monitor OpenCode RSS Feed

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

permissions:
  # This workflow no longer needs write permissions.
  contents: read

jobs:
  monitor-rss:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get local package version
        id: local
        run: |
          echo "â–¶ Reading local version from package.nix..."
          LOCAL_VERSION=$(grep -oP 'version = "\K[^"]+' package.nix | head -1)
          if [[ -z "$LOCAL_VERSION" ]]; then
            echo "âœ— Failed to parse local version from package.nix."
            exit 1
          fi
          echo "LOCAL_VERSION=$LOCAL_VERSION" >> $GITHUB_OUTPUT
          echo "âœ“ Local package version: $LOCAL_VERSION"

      - name: Get latest version from RSS feed
        id: remote
        run: |
          echo "â–¶ Fetching latest version from OpenCode RSS feed..."
          # Fetch the feed, find the first entry, get its title, extract the content,
          # strip the leading 'v', and trim whitespace.
          LATEST_VERSION=$(curl -sL https://github.com/sst/opencode/releases.atom | \
            grep -A 10 '<entry>' | \
            grep -m 1 '<title>' | \
            sed 's/.*<title>\(.*\)<\/title>.*/\1/' | \
            sed 's/^v//' | \
            xargs)

          if [[ ! "$LATEST_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "âœ— Failed to parse a valid version from the RSS feed. Found: '$LATEST_VERSION'"
            exit 1
          fi
          echo "REMOTE_VERSION=$LATEST_VERSION" >> $GITHUB_OUTPUT
          echo "âœ“ Latest version from RSS: $LATEST_VERSION"

      - name: Compare versions and trigger update
        if: steps.local.outputs.LOCAL_VERSION != steps.remote.outputs.REMOTE_VERSION
        run: |
          echo "ðŸŽ‰ New version detected! Upstream is ${{ steps.remote.outputs.REMOTE_VERSION }}, local is ${{ steps.local.outputs.LOCAL_VERSION }}."
          echo "ðŸš€ Triggering update workflow..."

          # This is a separate step in the original file, but combining it here for clarity.
          curl -sL \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/dispatches" \
            -d '{"event_type": "opencode-release-detected", "client_payload": {"version": "${{ steps.remote.outputs.REMOTE_VERSION }}"}}'

      - name: Report status
        if: success() && steps.local.outputs.LOCAL_VERSION == steps.remote.outputs.REMOTE_VERSION
        run: |
          echo "âœ… Versions match (v${{ steps.local.outputs.LOCAL_VERSION }}). No new release detected."
